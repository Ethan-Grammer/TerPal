{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fileFromPath = exports.toFile = exports.UnprocessableEntityError = exports.PermissionDeniedError = exports.InternalServerError = exports.AuthenticationError = exports.BadRequestError = exports.RateLimitError = exports.ConflictError = exports.NotFoundError = exports.APIUserAbortError = exports.APIConnectionTimeoutError = exports.APIConnectionError = exports.APIError = exports.GroqError = exports.Groq = void 0;\nconst Core = __importStar(require(\"./core.js\"));\nconst Errors = __importStar(require(\"./error.js\"));\nconst Uploads = __importStar(require(\"./uploads.js\"));\nconst API = __importStar(require(\"groq-sdk/resources/index\"));\n/** API Client for interfacing with the Groq API. */\nclass Groq extends Core.APIClient {\n  /**\n   * API Client for interfacing with the Groq API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\n   * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('GROQ_BASE_URL'),\n    apiKey = Core.readEnv('GROQ_API_KEY'),\n    ...opts\n  } = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.GroqError(\"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\");\n    }\n    const options = {\n      apiKey,\n      ...opts,\n      baseURL: baseURL || `https://api.groq.com`\n    };\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.GroqError('This is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ dangerouslyAllowBrowser: true })');\n    }\n    super({\n      baseURL: options.baseURL,\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch\n    });\n    this.chat = new API.Chat(this);\n    this.audio = new API.Audio(this);\n    this.models = new API.Models(this);\n    this._options = options;\n    this.apiKey = apiKey;\n  }\n  defaultQuery() {\n    return this._options.defaultQuery;\n  }\n  defaultHeaders(opts) {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders\n    };\n  }\n  authHeaders(opts) {\n    return {\n      Authorization: `Bearer ${this.apiKey}`\n    };\n  }\n}\nexports.Groq = Groq;\n_a = Groq;\nGroq.Groq = _a;\nGroq.GroqError = Errors.GroqError;\nGroq.APIError = Errors.APIError;\nGroq.APIConnectionError = Errors.APIConnectionError;\nGroq.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nGroq.APIUserAbortError = Errors.APIUserAbortError;\nGroq.NotFoundError = Errors.NotFoundError;\nGroq.ConflictError = Errors.ConflictError;\nGroq.RateLimitError = Errors.RateLimitError;\nGroq.BadRequestError = Errors.BadRequestError;\nGroq.AuthenticationError = Errors.AuthenticationError;\nGroq.InternalServerError = Errors.InternalServerError;\nGroq.PermissionDeniedError = Errors.PermissionDeniedError;\nGroq.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexports.GroqError = Errors.GroqError, exports.APIError = Errors.APIError, exports.APIConnectionError = Errors.APIConnectionError, exports.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError, exports.APIUserAbortError = Errors.APIUserAbortError, exports.NotFoundError = Errors.NotFoundError, exports.ConflictError = Errors.ConflictError, exports.RateLimitError = Errors.RateLimitError, exports.BadRequestError = Errors.BadRequestError, exports.AuthenticationError = Errors.AuthenticationError, exports.InternalServerError = Errors.InternalServerError, exports.PermissionDeniedError = Errors.PermissionDeniedError, exports.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexports.toFile = Uploads.toFile;\nexports.fileFromPath = Uploads.fileFromPath;\n(function (Groq) {\n  // Helper functions\n  Groq.toFile = Uploads.toFile;\n  Groq.fileFromPath = Uploads.fileFromPath;\n  Groq.Chat = API.Chat;\n  Groq.Audio = API.Audio;\n  Groq.Models = API.Models;\n})(Groq = exports.Groq || (exports.Groq = {}));\nexports = module.exports = Groq;\nexports.default = Groq;","map":{"version":3,"names":["Core","__importStar","require","Errors","Uploads","API","Groq","APIClient","constructor","baseURL","readEnv","apiKey","opts","undefined","GroqError","options","dangerouslyAllowBrowser","isRunningInBrowser","timeout","httpAgent","maxRetries","fetch","chat","Chat","audio","Audio","models","Models","_options","defaultQuery","defaultHeaders","authHeaders","Authorization","exports","_a","APIError","APIConnectionError","APIConnectionTimeoutError","APIUserAbortError","NotFoundError","ConflictError","RateLimitError","BadRequestError","AuthenticationError","InternalServerError","PermissionDeniedError","UnprocessableEntityError","toFile","fileFromPath","module"],"sources":["/Users/ethan/Desktop/Projects/e-advisor/node_modules/groq-sdk/src/index.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from './core';\nimport * as Errors from './error';\nimport { type Agent } from './_shims/index';\nimport * as Uploads from './uploads';\nimport * as API from \"./resources/index\";\n\nexport interface ClientOptions {\n  /**\n   * Defaults to process.env['GROQ_API_KEY'].\n   */\n  apiKey?: string | undefined;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   *\n   * Defaults to process.env['GROQ_BASE_URL'].\n   */\n  baseURL?: string | null | undefined;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n\n  /**\n   * By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   * Only set this option to `true` if you understand the risks and have appropriate mitigations in place.\n   */\n  dangerouslyAllowBrowser?: boolean;\n}\n\n/** API Client for interfacing with the Groq API. */\nexport class Groq extends Core.APIClient {\n  apiKey: string;\n\n  private _options: ClientOptions;\n\n  /**\n   * API Client for interfacing with the Groq API.\n   *\n   * @param {string | undefined} [opts.apiKey=process.env['GROQ_API_KEY'] ?? undefined]\n   * @param {string} [opts.baseURL=process.env['GROQ_BASE_URL'] ?? https://api.groq.com] - Override the default base URL for the API.\n   * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n   * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n   * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n   * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n   * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n   * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n   * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n   */\n  constructor({\n    baseURL = Core.readEnv('GROQ_BASE_URL'),\n    apiKey = Core.readEnv('GROQ_API_KEY'),\n    ...opts\n  }: ClientOptions = {}) {\n    if (apiKey === undefined) {\n      throw new Errors.GroqError(\n        \"The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' }).\",\n      );\n    }\n\n    const options: ClientOptions = {\n      apiKey,\n      ...opts,\n      baseURL: baseURL || `https://api.groq.com`,\n    };\n\n    if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n      throw new Errors.GroqError(\n        'This is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew Groq({ dangerouslyAllowBrowser: true })',\n      );\n    }\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout ?? 60000 /* 1 minute */,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n    this._options = options;\n\n    this.apiKey = apiKey;\n  }\n\n  chat: API.Chat = new API.Chat(this);\n  audio: API.Audio = new API.Audio(this);\n  models: API.Models = new API.Models(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return {\n      ...super.defaultHeaders(opts),\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override authHeaders(opts: Core.FinalRequestOptions): Core.Headers {\n    return { Authorization: `Bearer ${this.apiKey}` };\n  }\n\n  static Groq = this;\n\n  static GroqError = Errors.GroqError;\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static APIUserAbortError = Errors.APIUserAbortError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n}\n\nexport const {\n  GroqError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} = Errors;\n\nexport import toFile = Uploads.toFile;\nexport import fileFromPath = Uploads.fileFromPath;\n\nexport namespace Groq {\n  // Helper functions\n  export import toFile = Uploads.toFile;\n  export import fileFromPath = Uploads.fileFromPath;\n\n  export import RequestOptions = Core.RequestOptions;\n\n  export import Chat = API.Chat;\n\n  export import Audio = API.Audio;\n  export import Translation = API.Translation;\n\n  export import Models = API.Models;\n  export import Model = API.Model;\n  export import ModelList = API.ModelList;\n}\n\nexport default Groq;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}