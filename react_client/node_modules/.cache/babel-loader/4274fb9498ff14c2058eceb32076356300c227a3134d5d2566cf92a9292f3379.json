{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: fixed;\n  bottom: 10%;   // Adjust to position the chatbox slightly above the bottom of the screen\n  right: 10%;    // Center it horizontally by placing it slightly from the right\n  left: 10%;     // Also add left margin to center it horizontally\n  top: 10%;      // Position the top to give it a large space\n  width: auto;   // Width will auto-adjust based on right and left margins\n  height: auto;  // Height will auto-adjust based on top and bottom margins\n  background-color: white;\n  box-shadow: 0 0 20px rgba(0,0,0,0.2);\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  overflow: hidden;  // Ensures no overflow of content outside the borders\n`;\n_c = Container;\nconst MessageContainer = styled.div`\n  padding: 24px;  // Increased padding around the container edges\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n`;\n_c2 = MessageContainer;\nconst InputContainer = styled.div`\n  padding: 20px;\n  background: #f8f8f8;  // Give it a slightly different background to distinguish from the message area\n`;\n_c3 = InputContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n_c4 = Input;\nconst Message = styled.div`\n  background-color: ${props => props.sender === 'user' ? '#dcf8c6' : '#f3f3f3'};\n  border-radius: 10px;\n  margin: 8px;  // Slightly larger margins for better separation\n  padding: 12px 16px;  // Increased padding for larger bubbles\n  max-width: 90%;  // Optionally increase max width for larger messages\n  width: fit-content;\n  align-self: ${props => props.sender === 'user' ? 'flex-end' : 'flex-start'};\n  font-size: 1em;  // Increase font size for better readability\n  box-shadow: 0px 2px 6px #00000029;  // Optional: add shadow for better visibility\n`;\n_c5 = Message;\nconst SenderLabel = styled.div`\n  font-size: 0.75em;\n  color: ${props => props.sender === 'user' ? 'gray' : 'blue'};\n  margin-bottom: 4px;\n`;\n_c6 = SenderLabel;\n\"use strict\";\nconst Groq = require(\"groq-sdk\");\nconst groq = new Groq({\n  apiKey: process.env.GROQ_API_KEY\n});\nfunction Chatbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async msg => {\n    // Add the user message to the chat\n    setMessages(messages => [...messages, {\n      text: msg,\n      sender: 'user'\n    }]);\n    console.log('API Key:', process.env.REACT_APP_GROQ_API_KEY);\n\n    // Call Groq API\n    try {\n      const response = await axios.post('https://api.groq.com/chat/completions', {\n        messages: [{\n          \"role\": \"user\",\n          \"content\": msg\n        }],\n        model: \"mixtral-8x7b-32768\"\n      });\n\n      // Add Groq's response to the chat\n      setMessages(messages => [...messages, {\n        text: response.data.choices[0].message.content,\n        sender: 'ai'\n      }]);\n    } catch (error) {\n      console.error('Error calling Groq API:', error);\n      console.error('Error details:', error.response ? error.response.data : 'No response data');\n      // Optionally handle errors, e.g., show an error message in the chat\n\n      setMessages(messages => [...messages, {\n        text: \"Failed to get a response from E-Advisor.\",\n        sender: 'ai'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messages.map((m, index) => /*#__PURE__*/_jsxDEV(Message, {\n        sender: m.sender,\n        children: [/*#__PURE__*/_jsxDEV(SenderLabel, {\n          sender: m.sender,\n          children: m.sender === 'user' ? 'You:' : 'E-Advisor:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), m.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Type your message here...\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            sendMessage(e.target.value);\n            e.target.value = ''; // clear the input after sending\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c7 = Chatbox;\nexport default Chatbox;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MessageContainer\");\n$RefreshReg$(_c3, \"InputContainer\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"SenderLabel\");\n$RefreshReg$(_c7, \"Chatbox\");","map":{"version":3,"names":["React","useState","axios","styled","jsxDEV","_jsxDEV","Container","div","_c","MessageContainer","_c2","InputContainer","_c3","Input","input","_c4","Message","props","sender","_c5","SenderLabel","_c6","Groq","require","groq","apiKey","process","env","GROQ_API_KEY","Chatbox","_s","messages","setMessages","sendMessage","msg","text","console","log","REACT_APP_GROQ_API_KEY","response","post","model","data","choices","message","content","error","children","map","m","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onKeyDown","e","key","target","value","_c7","$RefreshReg$"],"sources":["/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 10%;   // Adjust to position the chatbox slightly above the bottom of the screen\n  right: 10%;    // Center it horizontally by placing it slightly from the right\n  left: 10%;     // Also add left margin to center it horizontally\n  top: 10%;      // Position the top to give it a large space\n  width: auto;   // Width will auto-adjust based on right and left margins\n  height: auto;  // Height will auto-adjust based on top and bottom margins\n  background-color: white;\n  box-shadow: 0 0 20px rgba(0,0,0,0.2);\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  overflow: hidden;  // Ensures no overflow of content outside the borders\n`;\n\nconst MessageContainer = styled.div`\n  padding: 24px;  // Increased padding around the container edges\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n`;\n\nconst InputContainer = styled.div`\n  padding: 20px;\n  background: #f8f8f8;  // Give it a slightly different background to distinguish from the message area\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 12px 20px;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nconst Message = styled.div`\n  background-color: ${props => props.sender === 'user' ? '#dcf8c6' : '#f3f3f3'};\n  border-radius: 10px;\n  margin: 8px;  // Slightly larger margins for better separation\n  padding: 12px 16px;  // Increased padding for larger bubbles\n  max-width: 90%;  // Optionally increase max width for larger messages\n  width: fit-content;\n  align-self: ${props => props.sender === 'user' ? 'flex-end' : 'flex-start'};\n  font-size: 1em;  // Increase font size for better readability\n  box-shadow: 0px 2px 6px #00000029;  // Optional: add shadow for better visibility\n`;\n\nconst SenderLabel = styled.div`\n  font-size: 0.75em;\n  color: ${props => props.sender === 'user' ? 'gray' : 'blue'};\n  margin-bottom: 4px;\n`;\n\n\"use strict\";\nconst Groq = require(\"groq-sdk\");\nconst groq = new Groq({\n    apiKey: process.env.GROQ_API_KEY\n});\n\nfunction Chatbox() {\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = async (msg) => {\n    // Add the user message to the chat\n    setMessages(messages => [...messages, { text: msg, sender: 'user' }]);\n    console.log('API Key:', process.env.REACT_APP_GROQ_API_KEY);\n\n    // Call Groq API\n    try {\n        const response = await axios.post('https://api.groq.com/chat/completions', {\n            messages: [\n                {\n                    \"role\": \"user\",\n                    \"content\": msg,\n                }\n            ],\n            model: \"mixtral-8x7b-32768\",\n        });\n\n        // Add Groq's response to the chat\n        setMessages(messages => [...messages, { text: response.data.choices[0].message.content, sender: 'ai' }]);\n    } catch (error) {\n        console.error('Error calling Groq API:', error);\n        console.error('Error details:', error.response ? error.response.data : 'No response data');\n        // Optionally handle errors, e.g., show an error message in the chat\n        \n        setMessages(messages => [...messages, { text: \"Failed to get a response from E-Advisor.\", sender: 'ai' }]);\n    }};\n  \n\n  return (\n    <Container>\n      <MessageContainer>\n        {messages.map((m, index) => (\n            <Message key={index} sender={m.sender}>\n            <SenderLabel sender={m.sender}>\n                {m.sender === 'user' ? 'You:' : 'E-Advisor:'}\n            </SenderLabel>\n            {m.text}\n            </Message>\n        ))}\n      </MessageContainer>\n\n      <InputContainer>\n        <Input placeholder=\"Type your message here...\" onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            sendMessage(e.target.value);\n            e.target.value = ''; // clear the input after sending\n          }\n        }} />\n      </InputContainer>\n    </Container>\n  );\n}\n\nexport default Chatbox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAdIF,SAAS;AAgBf,MAAMG,gBAAgB,GAAGN,MAAM,CAACI,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAPID,gBAAgB;AAStB,MAAME,cAAc,GAAGR,MAAM,CAACI,GAAI;AAClC;AACA;AACA,CAAC;AAACK,GAAA,GAHID,cAAc;AAKpB,MAAME,KAAK,GAAGV,MAAM,CAACW,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,KAAK;AAQX,MAAMG,OAAO,GAAGb,MAAM,CAACI,GAAI;AAC3B,sBAAsBU,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAU;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgBD,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAa;AAC7E;AACA;AACA,CAAC;AAACC,GAAA,GAVIH,OAAO;AAYb,MAAMI,WAAW,GAAGjB,MAAM,CAACI,GAAI;AAC/B;AACA,WAAWU,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG,MAAO;AAC9D;AACA,CAAC;AAACG,GAAA,GAJID,WAAW;AAMjB,YAAY;AACZ,MAAME,IAAI,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,MAAMC,IAAI,GAAG,IAAIF,IAAI,CAAC;EAClBG,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;AACxB,CAAC,CAAC;AAEF,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgC,WAAW,GAAG,MAAOC,GAAG,IAAK;IACjC;IACAF,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;MAAEI,IAAI,EAAED,GAAG;MAAEhB,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IACrEkB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEX,OAAO,CAACC,GAAG,CAACW,sBAAsB,CAAC;;IAE3D;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,IAAI,CAAC,uCAAuC,EAAE;QACvET,QAAQ,EAAE,CACN;UACI,MAAM,EAAE,MAAM;UACd,SAAS,EAAEG;QACf,CAAC,CACJ;QACDO,KAAK,EAAE;MACX,CAAC,CAAC;;MAEF;MACAT,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;QAAEI,IAAI,EAAEI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,OAAO;QAAE3B,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;IAC5G,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CV,OAAO,CAACU,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACP,QAAQ,GAAGO,KAAK,CAACP,QAAQ,CAACG,IAAI,GAAG,kBAAkB,CAAC;MAC1F;;MAEAV,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;QAAEI,IAAI,EAAE,0CAA0C;QAAEjB,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;IAC9G;EAAC,CAAC;EAGJ,oBACEb,OAAA,CAACC,SAAS;IAAAyC,QAAA,gBACR1C,OAAA,CAACI,gBAAgB;MAAAsC,QAAA,EACdhB,QAAQ,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnB7C,OAAA,CAACW,OAAO;QAAaE,MAAM,EAAE+B,CAAC,CAAC/B,MAAO;QAAA6B,QAAA,gBACtC1C,OAAA,CAACe,WAAW;UAACF,MAAM,EAAE+B,CAAC,CAAC/B,MAAO;UAAA6B,QAAA,EACzBE,CAAC,CAAC/B,MAAM,KAAK,MAAM,GAAG,MAAM,GAAG;QAAY;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,EACbL,CAAC,CAACd,IAAI;MAAA,GAJOe,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,eAEnBjD,OAAA,CAACM,cAAc;MAAAoC,QAAA,eACb1C,OAAA,CAACQ,KAAK;QAAC0C,WAAW,EAAC,2BAA2B;QAACC,SAAS,EAAGC,CAAC,IAAK;UAC/D,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;YACrBzB,WAAW,CAACwB,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;YAC3BH,CAAC,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;UACvB;QACF;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEhB;AAACxB,EAAA,CAtDQD,OAAO;AAAAgC,GAAA,GAAPhC,OAAO;AAwDhB,eAAeA,OAAO;AAAC,IAAArB,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAAtD,EAAA;AAAAsD,YAAA,CAAApD,GAAA;AAAAoD,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAA/C,GAAA;AAAA+C,YAAA,CAAA3C,GAAA;AAAA2C,YAAA,CAAAzC,GAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}