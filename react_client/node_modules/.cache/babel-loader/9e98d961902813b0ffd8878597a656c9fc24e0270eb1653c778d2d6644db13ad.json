{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbox.css'; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [initialUploadDone, setInitialUploadDone] = useState(false); // New state to track the initial upload\n\n  // useEffect to add initial AI message\n  useEffect(() => {\n    const welcomeMessage1 = {\n      text: \"Hello, welcome to UMD's Virtual Advising. To get started, please upload your Unofficial Transcript.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    };\n    const welcomeMessage2 = {\n      text: \"If having trouble finding your transcript, you can go to https://www.testudo.umd.edu to retrieve it.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    };\n    setMessages([welcomeMessage1, welcomeMessage2]);\n  }, []);\n  const sendMessage = async msg => {\n    const newMessages = [...messages, {\n      text: msg,\n      sender: 'user',\n      label: 'You'\n    }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post('http://localhost:3001/api/chat', {\n        messages: [{\n          role: \"user\",\n          content: msg\n        }],\n        model: \"mixtral-8x7b-32768\"\n      });\n      const aiMessage = response.data.response;\n      setMessages([...newMessages, {\n        text: aiMessage,\n        sender: 'ai',\n        label: 'E-Advisor'\n      }]);\n    } catch (error) {\n      console.error('Error communicating with the chat API:', error);\n      setMessages([...newMessages, {\n        text: \"Failed to get a response.\",\n        sender: 'ai',\n        label: 'E-Advisor'\n      }]);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post('http://localhost:3001/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // This header might be automatically set by browsers\n          }\n        });\n        alert('File uploaded successfully!');\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        alert('Failed to upload file.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageContainer\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `senderLabel ${message.sender}`,\n          children: message.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Type your message here...\",\n        onKeyDown: e => {\n          if (e.key === 'Enter' && e.target.value.trim()) {\n            sendMessage(e.target.value);\n            e.target.value = ''; // Clear the input after sending\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"gFY6DcEIe3RuPtEVsFFJfC4u0kk=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbox","_s","messages","setMessages","initialUploadDone","setInitialUploadDone","welcomeMessage1","text","sender","label","welcomeMessage2","sendMessage","msg","newMessages","response","post","role","content","model","aiMessage","data","error","console","handleFileUpload","event","file","target","files","formData","FormData","append","headers","alert","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onKeyDown","e","key","value","trim","_c","$RefreshReg$"],"sources":["/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbox.css'; // Import CSS\n\nfunction Chatbox() {\n  const [messages, setMessages] = useState([]);\n  const [initialUploadDone, setInitialUploadDone] = useState(false); // New state to track the initial upload\n\n  // useEffect to add initial AI message\n  useEffect(() => {\n    const welcomeMessage1 = {\n      text: \"Hello, welcome to UMD's Virtual Advising. To get started, please upload your Unofficial Transcript.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    };\n    const welcomeMessage2 = {\n      text: \"If having trouble finding your transcript, you can go to https://www.testudo.umd.edu to retrieve it.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    };\n    setMessages([welcomeMessage1, welcomeMessage2]);\n  }, []);\n\n  const sendMessage = async (msg) => {\n    const newMessages = [...messages, { text: msg, sender: 'user', label: 'You' }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post('http://localhost:3001/api/chat', {\n        messages: [{ role: \"user\", content: msg }],\n        model: \"mixtral-8x7b-32768\"\n      });\n\n      const aiMessage = response.data.response;\n      setMessages([...newMessages, { text: aiMessage, sender: 'ai', label: 'E-Advisor' }]);\n    } catch (error) {\n      console.error('Error communicating with the chat API:', error);\n      setMessages([...newMessages, { text: \"Failed to get a response.\", sender: 'ai', label: 'E-Advisor' }]);\n    }\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        const response = await axios.post('http://localhost:3001/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'  // This header might be automatically set by browsers\n          }\n        });\n        alert('File uploaded successfully!');\n      } catch (error) {\n          console.error('Error uploading file:', error);\n          alert('Failed to upload file.');\n      }\n    }\n  };\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"messageContainer\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            <span className={`senderLabel ${message.sender}`}>{message.label}</span>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"inputContainer\">\n        <input type=\"file\" onChange={handleFileUpload} />\n        <input\n          className=\"input\"\n          placeholder=\"Type your message here...\"\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && e.target.value.trim()) {\n              sendMessage(e.target.value);\n              e.target.value = ''; // Clear the input after sending\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}