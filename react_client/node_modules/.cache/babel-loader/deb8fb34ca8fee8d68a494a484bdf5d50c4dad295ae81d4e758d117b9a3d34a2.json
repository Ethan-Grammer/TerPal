{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Projects/e-advisor/E-Advisor/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbox.css'; // Import CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [initialUploadDone, setInitialUploadDone] = useState(false); // New state to track the initial upload\n  const contextSetupDone = useRef(false);\n\n  // Automatically scroll to bottom of chatbox\n\n  // Sets up initial e-advisor chat bubbles and context \n  useEffect(() => {\n    const welcomeMessages = [{\n      text: \"Hello, welcome to UMD's Virtual Advising. To get started, please upload your Unofficial Transcript.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    }, {\n      text: \"If you are having trouble finding your transcript, you can go to https://www.testudo.umd.edu to retrieve it.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n    }];\n    setMessages(welcomeMessages);\n    if (!contextSetupDone.current) {\n      // Check if context setup is not done\n      setupGroqContext();\n      contextSetupDone.current = true;\n    }\n  }, []);\n\n  // Sends context message to Groq API\n  const setupGroqContext = async () => {\n    try {\n      const systemMessage = \"You are a friendly copilot that helps students in the University of Maryland perform various tasks. You should refer to yourself as \\\"Virtual Advisor\\\" when talking to the user. Always respond with concise and short messages.\";\n      axios.post('http://localhost:3001/api/chat', {\n        messages: [{\n          role: \"system\",\n          content: systemMessage\n        }],\n        model: \"mixtral-8x7b-32768\"\n      });\n      setContextSetupDone(true);\n    } catch (error) {\n      console.error('Error setting up Groq context:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Failed to setup Virtual Advisor.\",\n        sender: 'system',\n        label: 'System'\n      }]);\n    }\n  };\n\n  // Retrieves transcript from file input\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post('http://localhost:3001/upload', formData);\n        setInitialUploadDone(true); // Update state to indicate that the file has been uploaded\n        setMessages([...messages, {\n          text: \"Transcript successfully uploaded! You can ask me any questions regarding UMD professors, courses, sections, or just anything you're curious about! Feel free to type in \\\"help\\\" if you want to know what kind of questions I can help you with.\",\n          sender: 'ai',\n          label: 'E-Advisor'\n        }]);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setMessages([...messages, {\n          text: \"Failed to upload file.\",\n          sender: 'ai',\n          label: 'E-Advisor'\n        }]);\n      }\n    }\n  };\n\n  // Sends user message to Groq API\n  const sendMessage = async msg => {\n    const newMessages = [...messages, {\n      text: msg,\n      sender: 'user',\n      label: 'You'\n    }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post('http://localhost:3001/api/chat', {\n        messages: [{\n          role: \"user\",\n          content: msg\n        }],\n        model: \"mixtral-8x7b-32768\"\n      });\n      const aiMessage = response.data.response;\n      setMessages([...newMessages, {\n        text: aiMessage,\n        sender: 'ai',\n        label: 'E-Advisor'\n      }]);\n    } catch (error) {\n      console.error('Error communicating with the chat API:', error);\n      setMessages([...newMessages, {\n        text: \"Failed to get a response.\",\n        sender: 'ai',\n        label: 'E-Advisor'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageContainer\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `senderLabel ${message.sender}`,\n          children: message.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: initialUploadDone ?\n      /*#__PURE__*/\n      // Can only start chatting after you upload your transcript file\n      _jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"Type your message here...\",\n        onKeyDown: e => {\n          if (e.key === 'Enter' && e.target.value.trim()) {\n            sendMessage(e.target.value);\n            e.target.value = ''; // Clear the input after sending\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileUpload,\n          id: \"fileInput\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          children: \"Choose file to upload transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"I8s9AwGU2tKgCM7XYd8RDHGWIs8=\");\n_c = Chatbox;\nexport default Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbox","_s","messages","setMessages","initialUploadDone","setInitialUploadDone","contextSetupDone","useRef","welcomeMessages","text","sender","label","current","setupGroqContext","systemMessage","post","role","content","model","setContextSetupDone","error","console","prevMessages","handleFileUpload","event","file","target","files","formData","FormData","append","response","sendMessage","msg","newMessages","aiMessage","data","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onKeyDown","e","key","value","trim","onChange","id","style","display","htmlFor","_c","$RefreshReg$"],"sources":["/Users/ethan/Desktop/Projects/e-advisor/E-Advisor/src/components/Chatbox.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './Chatbox.css'; // Import CSS\n\nfunction Chatbox() {\n  const [messages, setMessages] = useState([]);\n  const [initialUploadDone, setInitialUploadDone] = useState(false); // New state to track the initial upload\n  const contextSetupDone = useRef(false);\n\n  // Automatically scroll to bottom of chatbox\n  \n\n  // Sets up initial e-advisor chat bubbles and context \n  useEffect(() => {\n    const welcomeMessages = [{\n      text: \"Hello, welcome to UMD's Virtual Advising. To get started, please upload your Unofficial Transcript.\",\n      sender: 'ai',\n      label: 'E-Advisor'\n      },\n      {\n        text: \"If you are having trouble finding your transcript, you can go to https://www.testudo.umd.edu to retrieve it.\",\n        sender: 'ai',\n        label: 'E-Advisor'\n      }];\n    setMessages(welcomeMessages);\n\n    if (!contextSetupDone.current) {  // Check if context setup is not done\n      setupGroqContext();\n      contextSetupDone.current = true;\n    }\n  }, []);\n\n  // Sends context message to Groq API\n  const setupGroqContext = async () => {\n    try {\n      const systemMessage = \"You are a friendly copilot that helps students in the University of Maryland perform various tasks. You should refer to yourself as \\\"Virtual Advisor\\\" when talking to the user. Always respond with concise and short messages.\";\n      axios.post('http://localhost:3001/api/chat', {\n        messages: [{ role: \"system\", content: systemMessage}],\n        model: \"mixtral-8x7b-32768\"\n      });\n      setContextSetupDone(true);\n    } catch (error) {\n      console.error('Error setting up Groq context:', error);\n      setMessages(prevMessages => [...prevMessages, { text: \"Failed to setup Virtual Advisor.\", sender: 'system', label: 'System' }]);\n    }\n  };\n\n  // Retrieves transcript from file input\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        const response = await axios.post('http://localhost:3001/upload', formData);\n        setInitialUploadDone(true); // Update state to indicate that the file has been uploaded\n        setMessages([...messages, { text: \"Transcript successfully uploaded! You can ask me any questions regarding UMD professors, courses, sections, or just anything you're curious about! Feel free to type in \\\"help\\\" if you want to know what kind of questions I can help you with.\", sender: 'ai', label: 'E-Advisor' }]);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setMessages([...messages, { text: \"Failed to upload file.\", sender: 'ai', label: 'E-Advisor' }]);\n      }\n    }\n  };\n\n  // Sends user message to Groq API\n  const sendMessage = async (msg) => {\n    const newMessages = [...messages, { text: msg, sender: 'user', label: 'You' }];\n    setMessages(newMessages);\n    try {\n      const response = await axios.post('http://localhost:3001/api/chat', {\n        messages: [{ role: \"user\", content: msg }],\n        model: \"mixtral-8x7b-32768\"\n      });\n\n      const aiMessage = response.data.response;\n      setMessages([...newMessages, { text: aiMessage, sender: 'ai', label: 'E-Advisor' }]);\n    } catch (error) {\n      console.error('Error communicating with the chat API:', error);\n      setMessages([...newMessages, { text: \"Failed to get a response.\", sender: 'ai', label: 'E-Advisor' }]);\n    }\n  };\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"messageContainer\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.sender}`}>\n            <span className={`senderLabel ${message.sender}`}>{message.label}</span>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"inputContainer\">\n        {initialUploadDone ? ( // Can only start chatting after you upload your transcript file\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Type your message here...\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && e.target.value.trim()) {\n                sendMessage(e.target.value);\n                e.target.value = ''; // Clear the input after sending\n              }\n            }}\n          />\n        ) : (\n          <div>\n            <input type=\"file\" onChange={handleFileUpload} id=\"fileInput\" style={{ display: 'none' }} />\n            <label htmlFor=\"fileInput\">Choose file to upload transcript</label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}