{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 300px;\n  height: 400px;\n  background-color: white;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n  display: flex;\n  flex-direction: column;\n`;\n_c = Container;\nconst MessageContainer = styled.div`\n  padding: 10px;\n  overflow-y: auto;\n  flex-grow: 1;\n`;\n_c2 = MessageContainer;\nconst InputContainer = styled.div`\n  padding: 10px;\n`;\n_c3 = InputContainer;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n`;\n_c4 = Input;\nconst UserMessage = styled.div`\n  align-self: flex-end;\n  background-color: #dcf8c6;  // Light green background for user messages\n  border-radius: 10px;\n  margin: 5px;\n  padding: 8px 10px;\n  max-width: 80%;\n`;\nconst AIMessage = styled.div`\n  align-self: flex-start;\n  background-color: #f3f3f3;  // Light grey for AI messages\n  border-radius: 10px;\n  margin: 5px;\n  padding: 8px 10px;\n  max-width: 80%;\n`;\nfunction Chatbox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = msg => {\n    setMessages([...messages, {\n      text: msg,\n      sender: 'user'\n    }]);\n    // Simulate an AI response\n    setTimeout(() => {\n      setMessages(m => [...m, {\n        text: \"This is an AI response to: \" + msg,\n        sender: 'ai'\n      }]);\n    }, 500); // delay the AI response by 500 ms for effect\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messages.map((m, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: m.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Type your message here...\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            sendMessage(e.target.value);\n            e.target.value = ''; // clear the input after sending\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c5 = Chatbox;\nexport default Chatbox;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MessageContainer\");\n$RefreshReg$(_c3, \"InputContainer\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Chatbox\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Container","div","_c","MessageContainer","_c2","InputContainer","_c3","Input","input","_c4","UserMessage","AIMessage","Chatbox","_s","messages","setMessages","sendMessage","msg","text","sender","setTimeout","m","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onKeyDown","e","key","target","value","_c5","$RefreshReg$"],"sources":["/Users/ethan/Desktop/Projects/e-advisor/src/components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  width: 300px;\n  height: 400px;\n  background-color: white;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst MessageContainer = styled.div`\n  padding: 10px;\n  overflow-y: auto;\n  flex-grow: 1;\n`;\n\nconst InputContainer = styled.div`\n  padding: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  box-sizing: border-box;\n`;\n\nconst UserMessage = styled.div`\n  align-self: flex-end;\n  background-color: #dcf8c6;  // Light green background for user messages\n  border-radius: 10px;\n  margin: 5px;\n  padding: 8px 10px;\n  max-width: 80%;\n`;\n\nconst AIMessage = styled.div`\n  align-self: flex-start;\n  background-color: #f3f3f3;  // Light grey for AI messages\n  border-radius: 10px;\n  margin: 5px;\n  padding: 8px 10px;\n  max-width: 80%;\n`;\n\nfunction Chatbox() {\n  const [messages, setMessages] = useState([]);\n\n  const sendMessage = (msg) => {\n    setMessages([...messages, { text: msg, sender: 'user' }]);\n    // Simulate an AI response\n    setTimeout(() => {\n      setMessages(m => [...m, { text: \"This is an AI response to: \" + msg, sender: 'ai' }]);\n    }, 500); // delay the AI response by 500 ms for effect\n  };\n  \n\n  return (\n    <Container>\n      <MessageContainer>\n        {messages.map((m, index) => (\n          <div key={index}>{m.text}</div>\n        ))}\n      </MessageContainer>\n      <InputContainer>\n        <Input placeholder=\"Type your message here...\" onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            sendMessage(e.target.value);\n            e.target.value = ''; // clear the input after sending\n          }\n        }} />\n      </InputContainer>\n    </Container>\n  );\n}\n\nexport default Chatbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}